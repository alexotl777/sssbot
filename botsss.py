from re import T
from sys import flags
from zipapp import ZipAppError
import telebot
#from telegram.ext import Updater
#from telegram.ext import CommandHandler, MessageHandler, Filters
import requests
from telebot import types
import openpyxl

#—Ç–∞–±–ª —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º
book = openpyxl.open("shsn_raspisanie_karkas.xlsx", read_only=True)
sheet = book.active

#otr=[] #–æ—Ç—Ä—è–¥—ã
#for i in range(2, 13, 6):
#    otr.append(str(sheet[i][0].value))
#print(otr)
bot = telebot.TeleBot("Token")

@bot.message_handler(commands=['start'])
def start(message):
    global g
    g=0
    mes= f"<b>–ü—Ä–∏–≤–µ—Ç, <u>{message.from_user.first_name}</u></b>! üôÉ\n–ù–∞–ø–∏—à–∏ –º–Ω–µ /help"
    bot.send_message(message.chat.id, mes, parse_mode='html')

@bot.message_handler(commands=['help'])
def help1(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    timetable = types.KeyboardButton("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
    report = types.KeyboardButton("–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")
    qa = types.KeyboardButton("Q&A")
    global g
    g=0
    markup.add(timetable, report, qa)
    mes= f"<u>/ttable</u> - –¢–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ \n<u>/report</u> - –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å \n<u>/questions</u> - –û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã"
    bot.send_message(message.chat.id, mes, parse_mode='html', reply_markup=markup)





@bot.message_handler()
def body(message):
    if message.text == "/ttable" or message.text == "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ":
        zap="–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å!"
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        pn = types.KeyboardButton("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫")
        vt = types.KeyboardButton("–í—Ç–æ—Ä–Ω–∏–∫")
        sr = types.KeyboardButton("–°—Ä–µ–¥–∞")
        cht = types.KeyboardButton("–ß–µ—Ç–≤–µ—Ä–≥")
        pt = types.KeyboardButton("–ü—è—Ç–Ω–∏—Ü–∞")
        sb = types.KeyboardButton("–°—É–±–±–æ—Ç–∞")
        markup.add(pn, vt, sr, cht, pt, sb)

        bot.send_message(message.chat.id, zap, parse_mode='html', reply_markup=markup)
        global g
        g=1
    elif message.text == "–ü–æ–º–æ–≥–∏—Ç–µ ü•∫" or message.text == "–ú–µ–Ω—é":
        
        g=0
        help1(message)
    elif message.text == "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫":
        h=[]
        hf="–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:"
        for i in range(2, 18):
             if str(sheet[i][1].value) != "None":
                hf+="\n"+"<u>"+str(sheet[i][0].value)+"</u>"+" ‚ñ∂Ô∏è "+str(sheet[i][1].value)
                h.append([str(sheet[i][0].value),str(sheet[i][1].value)])
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        back = types.KeyboardButton("–ú–µ–Ω—é")
        
        g=0
        markup.add(back)
        bot.send_message(message.chat.id, f"<b>{hf}</b>", parse_mode='html', reply_markup=markup)
    elif message.text == "–í—Ç–æ—Ä–Ω–∏–∫":
        
        hf="–í—Ç–æ—Ä–Ω–∏–∫:"
        for i in range(2, 18):
             if str(sheet[i][2].value) != "None":
                hf+="\n"+"<u>"+str(sheet[i][0].value)+"</u>"+" ‚ñ∂Ô∏è "+str(sheet[i][2].value)
                
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        back = types.KeyboardButton("–ú–µ–Ω—é")
        
        g=0
        markup.add(back)
        bot.send_message(message.chat.id, f"<b>{hf}</b>", parse_mode='html', reply_markup=markup)
    elif message.text == "–°—Ä–µ–¥–∞":
        
        hf="–°—Ä–µ–¥–∞:"
        for i in range(2, 18):
             if str(sheet[i][3].value) != "None":
                time = str(sheet[i][0].value)
                if str(sheet[i+1][3].value) == "None" and i!=17:
                    time = time[:10]+str(sheet[i+1][0].value)[10:]
                hf+="\n"+"<u>"+time+"</u>"+" ‚ñ∂Ô∏è "+str(sheet[i][3].value)
                
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        back = types.KeyboardButton("–ú–µ–Ω—é")
        
        g=0
        markup.add(back)
        bot.send_message(message.chat.id, f"<b>{hf}</b>", parse_mode='html', reply_markup=markup)

    elif message.text == "–ß–µ—Ç–≤–µ—Ä–≥":
        
        hf="–ß–µ—Ç–≤–µ—Ä–≥:"
        for i in range(2, 18):
             if str(sheet[i][4].value) != "None":
                time = str(sheet[i][0].value)
                if str(sheet[i+1][4].value) == "None" and i!=17:
                    time = time[:10]+str(sheet[i+1][0].value)[10:]
                hf+="\n"+"<u>"+time+"</u>"+" ‚ñ∂Ô∏è "+str(sheet[i][4].value)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        back = types.KeyboardButton("–ú–µ–Ω—é")
        
        g=0
        markup.add(back)
        bot.send_message(message.chat.id, f"<b>{hf}</b>", parse_mode='html', reply_markup=markup)

    elif message.text == "–ü—è—Ç–Ω–∏—Ü–∞":
        
        hf="–ü—è—Ç–Ω–∏—Ü–∞:"
        for i in range(2, 18):
             if str(sheet[i][5].value) != "None":
                time = str(sheet[i][0].value)
                if str(sheet[i+1][5].value) == "None" and i!=17:
                    time = time[:10]+str(sheet[i+1][0].value)[10:]
                hf+="\n"+"<u>"+time+"</u>"+" ‚ñ∂Ô∏è "+str(sheet[i][5].value)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        back = types.KeyboardButton("–ú–µ–Ω—é")
        
        g=0
        markup.add(back)
        bot.send_message(message.chat.id, f"<b>{hf}</b>", parse_mode='html', reply_markup=markup)

    elif message.text == "–°—É–±–±–æ—Ç–∞":
        h=[]
        hf="–°—É–±–±–æ—Ç–∞:"
        for i in range(2, 18):
             if str(sheet[i][6].value) != "None":
                time = str(sheet[i][0].value)
                if str(sheet[i+1][6].value) == "None" and i!=17:
                    time = time[:10]+str(sheet[i+1][0].value)[10:]
                hf+="\n"+"<u>"+time+"</u>"+" ‚ñ∂Ô∏è "+str(sheet[i][6].value)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        back = types.KeyboardButton("–ú–µ–Ω—é")
        
        g=0
        markup.add(back)
        bot.send_message(message.chat.id, f"<b>{hf}</b>", parse_mode='html', reply_markup=markup)
    
    elif message.text == "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å" or message.text == "/report":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        back = types.KeyboardButton("–ú–µ–Ω—é")
        
        g=0
        markup.add(back)
        bot.send_message(message.chat.id, f"<b>–≠—Ç–æ–≥–æ –µ—â–µ –Ω–µ—Ç...</b>", parse_mode='html', reply_markup=markup)
    elif message.text == "Q&A" or message.text == "/questions":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        back = types.KeyboardButton("–ú–µ–Ω—é")
        
        g=0
        markup.add(back)
        bot.send_message(message.chat.id, f"<b>–≠—Ç–æ–≥–æ –µ—â–µ –Ω–µ—Ç...</b>", parse_mode='html', reply_markup=markup)
    
    
    #elif message.text in otr and g==1:
     #   global t

      #  bot.send_message(message.chat.id, "–¢–≤–æ–π –æ—Ç—Ä—è–¥ –µ—Å—Ç—å!", parse_mode='html')

        






    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        help = types.KeyboardButton("–ü–æ–º–æ–≥–∏—Ç–µ ü•∫")

        markup.add(help)
        bot.send_message(message.chat.id, "<b>–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é</b> ü•≤\n–ñ–º–∏ <u>/help</u>", parse_mode='html', reply_markup=markup) 
    
    



bot.polling(none_stop=True)
