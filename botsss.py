from re import T
from sys import flags
from zipapp import ZipAppError
import telebot
#from telegram.ext import Updater
#from telegram.ext import CommandHandler, MessageHandler, Filters
import requests
from telebot import types
import openpyxl

#—Ç–∞–±–ª —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º
book = openpyxl.open("shsn_raspisanie_karkas.xlsx", read_only=True)
sheet = book.active

#otr=[] #–æ—Ç—Ä—è–¥—ã
#for i in range(2, 13, 6):
#    otr.append(str(sheet[i][0].value))
#print(otr)
bot = telebot.TeleBot("5795768012:AAF7vtBoABHnAxkoNp_ExfnDeJvwc_EobQ8")
owner = 401082878



@bot.message_handler(commands=['start'])
def start(message):
    global g
    g=0
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    back = types.KeyboardButton("–ú–µ–Ω—é")

        
    markup.add(back)
    mes= f"<b>–ü—Ä–∏–≤–µ—Ç, <u>{message.from_user.first_name}</u></b>! üôÉ\n–ù–∞–ø–∏—à–∏ –º–Ω–µ /help –∏–ª–∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –ú–µ–Ω—é"

    bot.send_message(message.chat.id, mes, parse_mode='html', reply_markup=markup)

@bot.message_handler(commands=['help'])
def help1(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    timetable = types.KeyboardButton("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
    report = types.KeyboardButton("–û—Ç–∑—ã–≤")
    qa = types.KeyboardButton("Q&A")
    global g
    g=0
    markup.add(timetable, report, qa)
    mes= f"<u>/ttable</u> - –¢–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ üïë\n<u>/report</u> - –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ ‚úèÔ∏è\n<u>/questions</u> - –û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã üìö"
    bot.send_message(message.chat.id, mes, parse_mode='html', reply_markup=markup)


@bot.message_handler(commands=['send'])
def process_start(message):

    if int(message.chat.id) == owner:

        try:

            bot.send_message(message.chat.id, '–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–¥–µ–ª–∞–π —Ä–µ–ø–ª–µ–π')

            bot.forward_message(owner, message.chat.id, message.message_id)

            bot.register_next_step_handler(message, process_mind)

        except:

            bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –û—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–ª–∞ –≤ –±–ª–æ–∫–µ –∫–æ–¥–∞:\n<code>@bot.message_handler(commands=['send_message'])</code>", parse_mode='HTML')

    else:

        bot.send_message(message.chat.id, '–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!')

def process_mind(message):

    if int(message.chat.id) == owner:

        try:

            text = '–°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ' + str(message.reply_to_message.forward_from.first_name)

            bot.forward_message(message.reply_to_message.forward_from.id, owner, message.message_id)

            bot.send_message(owner, text)

        except:

            bot.send_message(message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –ë–æ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏–ª —Å–≤–æ—é —Ä–∞–±–æ—Ç—É.' + ' –û—à–∏–±–∫–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤ –±–ª–æ–∫–µ –∫–æ–¥–∞:\n\n <code>def process_mind(message)</code>', parse_mode='HTML')

    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!')  


@bot.message_handler()
def body(message):
    if message.text == "/ttable" or message.text == "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ":
        zap="–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å!"
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        pn = types.KeyboardButton("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫")
        vt = types.KeyboardButton("–í—Ç–æ—Ä–Ω–∏–∫")
        sr = types.KeyboardButton("–°—Ä–µ–¥–∞")
        cht = types.KeyboardButton("–ß–µ—Ç–≤–µ—Ä–≥")
        pt = types.KeyboardButton("–ü—è—Ç–Ω–∏—Ü–∞")
        sb = types.KeyboardButton("–°—É–±–±–æ—Ç–∞")
        markup.add(pn, vt, sr, cht, pt, sb)

        bot.send_message(message.chat.id, zap, parse_mode='html', reply_markup=markup)
        global g
        g=1
    elif message.text == "–ü–æ–º–æ–≥–∏—Ç–µ ü•∫" or message.text == "–ú–µ–Ω—é":
        
        g=0
        help1(message)
    elif message.text == "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫":
        h=[]
        hf="–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:"
        for i in range(2, 18):
             if str(sheet[i][1].value) != "None":
                if str(sheet[i][1].value)[:6] == "–õ–µ–∫—Ü–∏—è":
                    w1= "üîµ"
                elif  str(sheet[i][1].value)[:7] == "–°–µ–º–∏–Ω–∞—Ä":
                    w1= "üü°"
                else:
                    w1 = "üü¢"
                hf+="\n"+"<u>"+str(sheet[i][0].value)+"</u>"+f" {w1} \n"+str(sheet[i][1].value)
                h.append([str(sheet[i][0].value),str(sheet[i][1].value)])
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        back = types.KeyboardButton("–ú–µ–Ω—é")

        g=0
        markup.add(back)
        bot.send_message(message.chat.id, f"<b>{hf}</b>", parse_mode='html', reply_markup=markup)
    elif message.text == "–í—Ç–æ—Ä–Ω–∏–∫":

        hf="–í—Ç–æ—Ä–Ω–∏–∫:"
        for i in range(2, 18):
             if str(sheet[i][2].value) != "None":
                if str(sheet[i][2].value)[:6] == "–õ–µ–∫—Ü–∏—è":
                    w1= "üîµ"
                elif  str(sheet[i][2].value)[:7] == "–°–µ–º–∏–Ω–∞—Ä":
                    w1= "üü°"
                else:
                    w1 = "üü¢"
                hf+="\n"+"<u>"+str(sheet[i][0].value)+"</u>"+f" {w1} \n"+str(sheet[i][2].value)

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        back = types.KeyboardButton("–ú–µ–Ω—é")

        g=0
        markup.add(back)
        bot.send_message(message.chat.id, f"<b>{hf}</b>", parse_mode='html', reply_markup=markup)
    elif message.text == "–°—Ä–µ–¥–∞":

        hf="–°—Ä–µ–¥–∞:"
        for i in range(2, 18):
             if str(sheet[i][3].value) != "None":
                if str(sheet[i][3].value)[:6] == "–õ–µ–∫—Ü–∏—è":
                    w1= "üîµ"
                elif  str(sheet[i][3].value)[:7] == "–°–µ–º–∏–Ω–∞—Ä":
                    w1= "üü°"
                else:
                    w1 = "üü¢"
                time = str(sheet[i][0].value)
                if str(sheet[i+1][3].value) == "None" and i!=17:
                    time = time[:10]+str(sheet[i+1][0].value)[10:]
                hf+="\n"+"<u>"+time+"</u>"+f" {w1} \n"+str(sheet[i][3].value)

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        back = types.KeyboardButton("–ú–µ–Ω—é")

        g=0
        markup.add(back)
        bot.send_message(message.chat.id, f"<b>{hf}</b>", parse_mode='html', reply_markup=markup)

    elif message.text == "–ß–µ—Ç–≤–µ—Ä–≥":

        hf="–ß–µ—Ç–≤–µ—Ä–≥:"
        for i in range(2, 18):
             if str(sheet[i][4].value) != "None":
                if str(sheet[i][4].value)[:6] == "–õ–µ–∫—Ü–∏—è":
                    w1= "üîµ"
                elif  str(sheet[i][4].value)[:7] == "–°–µ–º–∏–Ω–∞—Ä":
                    w1= "üü°"
                else:
                    w1 = "üü¢"
                time = str(sheet[i][0].value)
                if str(sheet[i+1][4].value) == "None" and i!=17:
                    time = time[:10]+str(sheet[i+1][0].value)[10:]
                hf+="\n"+"<u>"+time+"</u>"+f" {w1} \n"+str(sheet[i][4].value)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        back = types.KeyboardButton("–ú–µ–Ω—é")

        g=0
        markup.add(back)
        bot.send_message(message.chat.id, f"<b>{hf}</b>", parse_mode='html', reply_markup=markup)

    elif message.text == "–ü—è—Ç–Ω–∏—Ü–∞":

        hf="–ü—è—Ç–Ω–∏—Ü–∞:"
        for i in range(2, 18):
             if str(sheet[i][5].value) != "None":
                if str(sheet[i][5].value)[:6] == "–õ–µ–∫—Ü–∏—è":
                    w1= "üîµ"
                elif  str(sheet[i][5].value)[:7] == "–°–µ–º–∏–Ω–∞—Ä":
                    w1= "üü°"
                else:
                    w1 = "üü¢"
                time = str(sheet[i][0].value)
                if str(sheet[i+1][5].value) == "None" and i!=17:
                    time = time[:10]+str(sheet[i+1][0].value)[10:]
                hf+="\n"+"<u>"+time+"</u>"+f" {w1} \n"+str(sheet[i][5].value)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        back = types.KeyboardButton("–ú–µ–Ω—é")

        g=0
        markup.add(back)
        bot.send_message(message.chat.id, f"<b>{hf}</b>", parse_mode='html', reply_markup=markup)

    elif message.text == "–°—É–±–±–æ—Ç–∞":
        h=[]
        hf="–°—É–±–±–æ—Ç–∞:"
        for i in range(2, 18):
             if str(sheet[i][6].value) != "None":
                if str(sheet[i][6].value)[:6] == "–õ–µ–∫—Ü–∏—è":
                    w1= "üîµ"
                elif  str(sheet[i][6].value)[:7] == "–°–µ–º–∏–Ω–∞—Ä":
                    w1= "üü°"
                else:
                    w1 = "üü¢"
                time = str(sheet[i][0].value)
                if str(sheet[i+1][6].value) == "None" and i!=17:
                    time = time[:10]+str(sheet[i+1][0].value)[10:]
                hf+="\n"+"<u>"+time+"</u>"+f" {w1} \n"+str(sheet[i][6].value)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        back = types.KeyboardButton("–ú–µ–Ω—é")

        g=0
        markup.add(back)
        bot.send_message(message.chat.id, f"<b>{hf}</b>", parse_mode='html', reply_markup=markup)
    
    #elif message.text == "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å" or message.text == "/report":
    #    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
     #   back = types.KeyboardButton("–ú–µ–Ω—é")
      #  
       # g=0
        #markup.add(back)
        #bot.send_message(message.chat.id, f"<b>–≠—Ç–æ–≥–æ –µ—â–µ –Ω–µ—Ç...</b>", parse_mode='html', reply_markup=markup)
    elif message.text == "Q&A" or message.text == "/questions":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        back = types.KeyboardButton("–ú–µ–Ω—é")
        
        g=0
        markup.add(back)
        bot.send_message(message.chat.id, f"<b>–≠—Ç–æ–≥–æ –µ—â–µ –Ω–µ—Ç...</b>", parse_mode='html', reply_markup=markup)
    
    
    #elif message.text in otr and g==1:
     #   global t

      #  bot.send_message(message.chat.id, "–¢–≤–æ–π –æ—Ç—Ä—è–¥ –µ—Å—Ç—å!", parse_mode='html')


    #elif message.text == "–û—Ç–∑—ã–≤" or message.text == "/report":
     #   bot.send_message(message.chat.id, f"<b>–ù–∞–ø–∏—à–∏ –≤–æ–ø—Ä–æ—Å –≤ –≤–∏–¥–µ: –í: '–¢–≤–æ–π –≤–æ–ø—Ä–æ—Å'</b>\n–¢–∞–∫ –Ω—É–∂–Ω–æ –¥–ª—è –Ω–∞—à–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞)", parse_mode='html')
    #    #bot.send_message(message.chat.id, '<b>–ù–∞–ø–∏—à–∏ –≤–æ–ø—Ä–æ—Å –≤ –≤–∏–¥–µ: "–í: <–¢–≤–æ–π –≤–æ–ø—Ä–æ—Å>"</b>\n–¢–∞–∫ –Ω—É–∂–Ω–æ –¥–ª—è –Ω–∞—à–µ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞)')
    #elif message.text[:2] == "–í:":
     #   if int(message.chat.id) == owner:

#            try:

#                bot.send_message(message.chat.id, '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –±—ã–ª–æ –ø–æ–ª—É—á–µ–Ω–æ')

#            except:
#                bot.send_message(owner, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –ë–æ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏–ª —Å–≤–æ—é —Ä–∞–±–æ—Ç—É.' + ' –û—à–∏–±–∫–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤ –±–ª–æ–∫–µ –∫–æ–¥–∞:\n\n <code>@bot.message_handler(content_types=["text"])</code>', parse_mode='HTML')



 #       else:

  #          pass

   #     try:

    #        bot.forward_message(owner, message.chat.id, message.message_id)
            
     #       bot.send_message(message.chat.id, str(message.from_user.first_name) + ',' +' —è –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—á–µ–Ω—å —Å–∫–æ—Ä–æ –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—á—É :)')

      #  except:

       #     bot.send_message(owner, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –ë–æ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏–ª —Å–≤–æ—é —Ä–∞–±–æ—Ç—É.')
       # markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        #back = types.KeyboardButton("–ú–µ–Ω—é")
        
        #g=0
        #markup.add(back)
       # bot.send_message(message.chat.id, f"<b>–≠—Ç–æ–≥–æ –µ—â–µ –Ω–µ—Ç...</b>", parse_mode='html', reply_markup=markup)


    elif message.text == "–û—Ç–∑—ã–≤" or message.text == "/report":
        try:
            bot.send_message(message.chat.id, "–ü–∏—à–∏ —Å–≤–æ–π –æ—Ç–∑—ã–≤!")
            bot.register_next_step_handler(message, txt)
        except:
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞!")



    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        help = types.KeyboardButton("–ü–æ–º–æ–≥–∏—Ç–µ ü•∫")

        markup.add(help)
        bot.send_message(message.chat.id, "<b>–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é</b> ü•≤\n–ñ–º–∏ <u>/help</u>", parse_mode='html', reply_markup=markup) 
        sad = open('sad.webp', 'rb')
        bot.send_sticker(message.chat.id, sad)
        bot.send_sticker(message.chat.id, "FILEID")
'''def rep(message):
    if message.text == "–û—Ç–∑—ã–≤" or message.text == "/report":
        try:
            bot.send_message(message.chat.id, "–ü–∏—à–∏ —Å–≤–æ–π –æ—Ç–∑—ã–≤!")
            bot.register_next_step_handler(message, process_mind)
        except:
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞!")'''
def txt(message):
    #bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
    bot.forward_message(owner, message.chat.id, message.message_id)

    #bot.send_message(owner, f"–û—Ç–∑—ã–≤: \n\n{message.text}", parse_mode='html')
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    back = types.KeyboardButton("–ú–µ–Ω—é")
    
    g=0
    markup.add(back)
    bot.send_message(message.chat.id, f"<b>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤</b> ü•∞", parse_mode='html', reply_markup=markup)
    love = open('love.webp', 'rb')
    bot.send_sticker(message.chat.id, love)
    bot.send_sticker(message.chat.id, "FILEID")

bot.polling(none_stop=True)